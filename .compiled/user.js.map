{"version":3,"sources":["../src/user.js"],"names":["cheerio","require","request","User","id","username","first_name","last_name","status","balance","key","vk_acc","menu_id","last_message_id","createKey","uname","_existInDB","_id","_username","_first_name","_last_name","_status","_balance","_key","_vk_acc","_menu_id","_last_message_id","taskname","task","fromDB","taskDone","workers","some","worker","user_id","err","confirmed","confirm","skip","user","url","required","Number","isNaN","finalCost","cost","Create","saveToDB","_spendMoney","console","log","stack","UpdateUser","update","vk_link","vk_uname","exec","toString","used","vkAccUsed","html","$","load","userStatus","vk_id","vkacc","toJSON","coins","InsertUser","GetTasksOfUser","jsonU","lastname","amount","val","result","res","FindUserByVk","fromJSON","msg","telegUser","from","FindUser","n","s","length","String","fromCharCode","Math","random","replace"],"mappings":"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","file":"user.js","sourcesContent":["import VkPhotoLikeTask from \"./VkPhotoLikeTask\";\r\nconst  cheerio = require('cheerio');\r\nconst  request = require('request-promise');\r\nimport bot from './TeleBot';\r\nimport Task from './task.js';\r\nimport DB from './DB';\r\nimport VkAcc from './VkAcc';\r\n\r\nexport default class User{\r\n\r\n    constructor(id, username, first_name, last_name, status, balance, key, vk_acc, menu_id, last_message_id){\r\n        if(!status){\r\n            status = 'new_user';\r\n            balance = 0;\r\n            key = createKey(30);\r\n            vk_acc = {uname:'',id:''};\r\n            menu_id = '';\r\n            this._existInDB = false;\r\n            last_message_id = 0;\r\n        }\r\n        else\r\n            this._existInDB = true;\r\n        this._id = id;\r\n        this._username = username;\r\n        this._first_name = first_name;\r\n        this._last_name = last_name;\r\n        this._status = status;\r\n        this._balance = balance;\r\n        this._key = key;\r\n        this._vk_acc = vk_acc;\r\n        this._menu_id = menu_id;\r\n        this._last_message_id = last_message_id;\r\n    }\r\n\r\n    async confirmfTask(taskname){\r\n        let task = await Task.fromDB(taskname);\r\n        let taskDone;\r\n        try{\r\n            if(task.workers){\r\n                taskDone = task.workers.some((worker) => {\r\n                    return worker.user_id == this.id;\r\n                });\r\n            }\r\n        }catch(err){\r\n            throw('Мне кажется, ты не выполнил задание. Если это не так, напиши, пожалуйста, в техподдержу, мы поможем');\r\n        }\r\n        if(taskDone)\r\n            throw 'Ты уже выполнял это задание';\r\n        if (task) {\r\n            let confirmed = await task.confirm(this);\r\n            if(!confirmed)\r\n                throw('Мне кажется, ты не выполнил задание. Если это не так, напиши, пожалуйста, в техподдержу, мы поможем');\r\n        }\r\n\r\n        return task;\r\n    }\r\n\r\n    async skipTask(taskname){\r\n        let task = await Task.fromDB(taskname);\r\n        task.skip(user);\r\n    }\r\n\r\n    async createVkPhotoLikeTask(url, required){\r\n        required = Number(required);\r\n        if(isNaN(required))\r\n            throw(\"Странное число...Не умею работать с такими\");\r\n\r\n        let finalCost = required * VkPhotoLikeTask.cost;\r\n\r\n        if(typeof(required)!=\"number\"){\r\n            throw(\"Странное число...Не умею работать с такими\");\r\n        }\r\n        else if(finalCost > this.balance)\r\n            throw(\"Кажется, финансы не позволяют. На счету \" + this.balance + \" руб, а нужно \" + finalCost);\r\n        else if(finalCost <= 0)\r\n            throw(\"Мы не можем крутить отрицательные и нулевые значения, извини\");\r\n\r\n        let task = await Task.Create(url, 'vk_photo_like_task', required, this.id);//new VkPhotoLikeTask(url, required, this.id);\r\n\r\n        try {\r\n            await task.saveToDB();\r\n            this._spendMoney(task.cost * required);\r\n        }\r\n        catch (err){\r\n            console.log('err');\r\n            console.log(err.stack);\r\n            throw(\"Неведомая ошибка на сервере. Пожалуйста, расскажи об этом техподдержке (последний пункт в главном меню)\")\r\n        }\r\n\r\n    }\r\n\r\n    async createVkPostLikeTask(url, required){\r\n        required = Number(required);\r\n        if(isNaN(required))\r\n            throw(\"Странное число...Не умею работать с такими\");\r\n\r\n        let finalCost = required * VkPhotoLikeTask.cost;\r\n\r\n        if(typeof(required)!=\"number\"){\r\n            throw(\"Странное число...Не умею работать с такими\");\r\n        }\r\n        else if(finalCost > this.balance)\r\n            throw(\"Кажется, финансы не позволяют. На счету \" + this.balance + \" руб, а нужно \" + finalCost);\r\n        else if(finalCost <= 0)\r\n            throw(\"Мы не можем крутить отрицательные и нулевые значения, извини\");\r\n\r\n        let task = await Task.Create(url, 'vk_post_like_task', required, this.id);//new VkPhotoLikeTask(url, required, this.id);\r\n\r\n        await task.saveToDB();\r\n        this._spendMoney(task.cost * required);\r\n\r\n    }\r\n\r\n    async update(){\r\n        await DB.UpdateUser(this);\r\n    }\r\n\r\n    static async vkAccUsed(vk_uname){\r\n        let result = true;\r\n        let res = await DB.FindUserByVk(vk_uname)\r\n        try {\r\n            user = User.fromJSON(res);\r\n            result = true;\r\n        }\r\n        catch (err){\r\n            result = false;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    async delVkAcc(){\r\n        this._vk_acc.uname = '';\r\n        this._vk_acc.id = '';\r\n        this.update();\r\n    }\r\n\r\n    async addVkAcc(vk_link) {///////////////////////////////////////////////////////////////vk acc retrying\r\n        let vk_uname = (/vk\\.com\\/([a-zA-Z0-9]*)/g).exec(vk_link)[1].toString();\r\n\r\n        let used = await User.vkAccUsed(vk_uname);\r\n        if(!used){\r\n            vk_link = 'https://vk.com/' + vk_uname;\r\n            let html = await request(vk_link);\r\n\r\n            let $ = cheerio.load(html);\r\n            let userStatus = $('div.pp_status').html();\r\n            let vk_id;\r\n            try{\r\n                vk_id = /photo(\\d+)_/.exec(html)[1]; ///owner_id=(\\d+)/.exec($('#wall_a_s').href)[1];\r\n            }\r\n            catch(err){\r\n                throw 'Страница скрыта для неавторизованых пользователей, я не могу взять нужную информацию. Я ошбиаюсь? Напиши в техподдержку, мы поможем';\r\n            }\r\n            if (this.key == userStatus) {\r\n                let vkacc = new VkAcc(vk_uname, vk_id);\r\n                this._vk_acc = vkacc.toJSON();\r\n            }\r\n            else if(userStatus === null){\r\n                throw \"Статус на странице скрыт или пуст. Пожалуста, поменяй настройки приватности, чтобы я (неавторизованный пользователь) смог его увидеть.\";\r\n            }\r\n            else {\r\n                throw \"Ошибка, статус на странице сейчас \" + userStatus;\r\n            }\r\n        }\r\n        else throw \"Ошибка, аккаунт уже привязан к другому пользователю\";\r\n    }\r\n\r\n    async getPaid(coins){\r\n        this._balance = Number(this._balance) + Number(coins);\r\n        await this.update();\r\n    }\r\n\r\n    static async getSender(msg){\r\n        let telegUser = msg.from;\r\n        let user;\r\n        try{\r\n            user = await User.fromDB(telegUser.id);\r\n        }\r\n        catch(err) {\r\n            user = new User( telegUser.id, telegUser.username, telegUser.first_name, telegUser.last_name);\r\n        }\r\n        return user;\r\n    }\r\n\r\n    async saveToDB(){\r\n        await DB.InsertUser(this);\r\n    }\r\n\r\n    static async fromDB(id){\r\n        const jsonU = await DB.FindUser(id);\r\n        let user = User.fromJSON(res);\r\n        return user;\r\n    }\r\n\r\n    async createdTasks(){\r\n        return await Task.GetTasksOfUser(this);\r\n    }\r\n\r\n    static fromJSON(jsonU){\r\n        return new User( jsonU.id, jsonU.username, jsonU.first_name, jsonU.last_name, jsonU.status,\r\n             jsonU.balance, jsonU.key, jsonU.vk_acc, jsonU.menu_id, jsonU.last_message_id);\r\n    }\r\n\r\n    toJSON(){\r\n        let jsonU = {\r\n            id : this.id,\r\n            username : this.username,\r\n            first_name : this.first_name,\r\n            last_name : this.lastname,\r\n            status : this.status,\r\n            balance : this.balance,\r\n            key : this.key,\r\n            vk_acc : {\r\n                uname : this.vk_acc.uname,\r\n                id: this.vk_acc.id\r\n            },\r\n            menu_id : this.menu_id,\r\n            last_message_id : this.last_message_id\r\n        };\r\n        return jsonU;\r\n    }\r\n\r\n    async _spendMoney(amount){\r\n        this._balance-=amount;\r\n        await this.update();\r\n    }\r\n    /////////////////////////////////getters,setters\r\n    set menu_id(menu_id){\r\n        this._menu_id = menu_id;\r\n        this.update();\r\n    }\r\n\r\n    get menu_id(){\r\n        return this._menu_id;\r\n    }\r\n    \r\n    set status(status){\r\n        this._status = status;\r\n        this.update();\r\n    }\r\n    \r\n    get status(){\r\n        return this._status;\r\n    }\r\n    \r\n    get ExistInDB(){\r\n        return this._existInDB;\r\n    }\r\n    \r\n    get id(){\r\n        return this._id;\r\n    }\r\n    \r\n    get username(){\r\n        return this._username;\r\n    }\r\n    \r\n    get first_name(){\r\n        return this._first_name;\r\n    }\r\n    \r\n    get last_name(){\r\n        return this._last_name;\r\n    }\r\n    \r\n    get status(){\r\n        return this._status;\r\n    }\r\n    \r\n    get balance(){\r\n        return this._balance;\r\n    }\r\n    \r\n    set key(key){\r\n        this._key = key;\r\n        this.update();\r\n    }\r\n    \r\n    get key(){\r\n        return this._key;\r\n    }\r\n    \r\n    get vk_acc(){\r\n        return this._vk_acc;\r\n    }\r\n    \r\n    get last_message_id(){\r\n        return this._last_message_id;\r\n    }\r\n    \r\n    set last_message_id(val){\r\n        this._last_message_id = val;\r\n        this.update();\r\n    }\r\n}\r\n\r\nfunction createKey (n){\r\n    var s ='';\r\n    while(s.length < n)\r\n        s += String.fromCharCode(Math.random() * 1106).replace(/[^a-zA-Z]|_/g,'');\r\n    return s;\r\n}\r\n"]}