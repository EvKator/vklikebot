{"version":3,"sources":["../src/interaction.js"],"names":["request","require","cheerio","onText","msg","match","user","getSender","ExistInDB","saveToDB","greeting","sendMessage","sendNewMenu","on","patt","console","log","data","test","sendStats","sendProfilesEditionMenu","sendEarnMenu","sendTasksMenu","id","status","key","createKey","urlkey","parse_mode","reply_markup","message","chat","sendMenu","task","GetTaskForUser","sendEarnOperationButton","taskname","exec","text","confirmTask","_cost","answerCallbackQuery","skipTask","deleteMenu","addVkAcc","link","required","balance","Number","createVkPhotoLikeTask","n","s","length","String","fromCharCode","Math","random","replace"],"mappings":"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","file":"interaction.js","sourcesContent":["let request = require('request');\r\nlet cheerio = require('cheerio');\r\nimport nMenu from './nmenu';\r\n//let work = require('work.js');\r\n//let task = require('task.js');\r\nimport bot from './TeleBot';\r\nimport User from './user';\r\nimport Task from './task';\r\n\r\n\r\n////////////////////////////////////////TASK/////////////////////////////////////////////////////////\r\nbot.onText(/\\/start/, async function (msg, match) {\r\n\r\n    let user = await User.getSender(msg);\r\n    if(!user.ExistInDB){\r\n        await user.saveToDB();\r\n        var greeting = \"Hello! This bot will help you easily and reliably exchange your \" +\r\n                \"likes with our other users. To connect your account, click the appropriate button.\";\r\n        user.sendMessage(greeting);\r\n    }\r\n});\r\n\r\nbot.onText(/\\/menu/, async function (msg, match) {\r\n    let user = await User.getSender(msg);\r\n    nMenu.sendNewMenu(user);\r\n});\r\n\r\nbot.on('callback_query', async function (msg) {\r\n    let user = await User.getSender(msg);\r\n    let patt = /goToPhoto\\((.+)\\)/g;\r\n    console.log(msg.data);\r\n    if(patt.test(msg.data)){\r\n        /*console.log(msg.data);\r\n        var mat = patt.exec(msg.data);\r\n        var taskName = mat[1];\r\n        user.tasks.push(taskName);\r\n        dataManage.changeUser(user);\r\n        dataManage.setStatus(user, 'task_creation(vk_photo_like)');\r\n        work.getVkLikeTask(user);*/\r\n    }\r\n    switch (msg.data){\r\n        case '/stats':\r\n            console.log('ssssss');\r\n            nMenu.sendStats(user);\r\n            break;\r\n        case '/profiles':\r\n            nMenu.sendProfilesEditionMenu(user);\r\n            break;\r\n        case '/earn':\r\n            nMenu.sendEarnMenu(user);\r\n            //dataManage.setStatus(user, 'earning');\r\n            //bot.sendMessage(msg.message.chat.id, \"Send me a link to the photo for a wrapping of likes\");\r\n            break;\r\n        case '/tasks':\r\n            nMenu.sendTasksMenu(user);\r\n            //earn(msg);\r\n            break;\r\n        case '/createTask(vk_photo_like)':\r\n            bot.sendMessage(user.id, 'send the link to the photo');\r\n            user.status = 'task_creation(vk_photo_like)[link]';\r\n        case '/vk_photo_like':\r\n            /*dataManage.setStatus(user, 'task_creation(vk_photo_like)');\r\n            bot.sendMessage(msg.message.chat.id, \"Send me a link to the photo for a wrapping of likes\");*/\r\n            break;\r\n        case '/addVkAcc':\r\n            var key = createKey(30);\r\n            user.status = 'vk_acc_addition';\r\n            user.key = key;\r\n            var urlkey = {\r\n                parse_mode:\"Markdown\",\r\n                reply_markup: {\r\n                    \"inline_keyboard\": [\r\n                        [{\"text\":\"Open VK\", \"callback_data\" :\"/menu\", \"url\" : \"https://vk.com/id0\"}]\r\n                    ]\r\n                }};\r\n            bot.sendMessage(msg.message.chat.id, \"Indicate in the status of your VK page this key: `\" +\r\n                key + \"` (press to copy) and AFTER send me its ID\", urlkey, {parse_mode:\"Markdown\"});\r\n            break;\r\n        case '/removeVkAcc':\r\n            break;\r\n        case '/menu':\r\n            nMenu.sendMenu(user);\r\n            break;\r\n\r\n        case '/earn_vk_photo_like':\r\n            let task = await Task.GetTaskForUser(user, 'vk_photo_like_task');\r\n            console.log(task);\r\n            if(task) {\r\n                nMenu.sendEarnOperationButton(user, task);\r\n            }\r\n            else {\r\n                bot.sendMessage(user.id, \"There are no this type tasks for you\");//////////////////////////////////////\r\n            }\r\n            break;\r\n        default:\r\n            let taskname = (/\\/confirm\\((.*)\\)/g).exec(msg.data)[1];\r\n            if(taskname){\r\n                let text = \"\";\r\n                let task = await user.confirmTask(taskname);\r\n                console.log('sssssss');\r\n                console.log(task);\r\n                if(task){\r\n                    text = \"Success, you will get \" + task._cost + \" coins\";\r\n                }\r\n                else{\r\n                    text = \"Failure\";\r\n                }\r\n                bot.sendMessage(user.id, text);\r\n                user.status = 'free';\r\n            }\r\n    }\r\n    bot.answerCallbackQuery(msg.id, \"\", true);\r\n});\r\n\r\nbot.onText(/\\/confirm\\((.*)\\)/, async function (msg, match) {\r\n    let user = await User.getSender(msg);\r\n    await user.confirmTask(match[1]);\r\n});\r\n\r\nbot.onText(/\\/skip\\((.*)\\)/, async function (msg, match) {\r\n    let user = await User.getSender(msg);\r\n    await user.skipTask(match[1]);\r\n});\r\n\r\nbot.onText(/(.*)/, async function (msg, match) {\r\n    let user = await User.getSender(msg);\r\n    nMenu.deleteMenu(user);\r\n    console.log(user.status);\r\n    switch (user.status){\r\n        case 'vk_acc_addition':\r\n            user.addVkAcc(match[1]);\r\n            user.status = 'free';\r\n            break;\r\n        case 'vk_acc_removal':\r\n            break;\r\n        case 'task_creation(vk_photo_like)[link]':\r\n            user.status = 'task_creation(vk_photo_like{' + match[1] + '})[required]';\r\n            bot.sendMessage(msg.chat.id, \"How many likes do you want to wind?\");\r\n            break;\r\n        default:\r\n            let link = (/task_creation\\(vk_photo_like\\{(.*)\\}\\)\\[required\\]/g).exec(user.status)[1];\r\n            if(link){\r\n                let required = (/(\\d*)/g).exec(match)[1];\r\n                if(required){\r\n                    console.log(user.balance);\r\n                    if(Number(required) <= Number(user.balance)){\r\n                        ///....\r\n                        user.createVkPhotoLikeTask(link,match[1]);\r\n                        bot.sendMessage(msg.chat.id, \"ok, \" + required);\r\n                    }\r\n                    else\r\n                        bot.sendMessage(msg.chat.id, \"Too low a balance for this operation\");\r\n\r\n                }\r\n                user.status = 'free';\r\n            }\r\n\r\n    }\r\n\r\n    //dataManage.setStatus(user, 'free');\r\n});\r\n\r\nbot.onText(/\\/balance\\((\\d+)\\)/, function (msg, match) {\r\n    /*user = dataManage.getUser(msg.from.id);\r\n    console.log(match[1]);\r\n    dataManage.setBalance(user, match[1]);\r\n\r\n    //dataManage.setStatus(user, 'free');*/\r\n});\r\n\r\nbot.onText(/\\/cltask/, function (msg, match) {\r\n    /*user = dataManage.getUser(msg.from.id);\r\n    console.log(match[1]);\r\n    user.tasks = new Array();\r\n    dataManage.changeUser(user);\r\n\r\n    //dataManage.setStatus(user, 'free');*/\r\n});\r\n\r\nfunction createKey (n){\r\n    var s ='';\r\n    while(s.length < n)\r\n        s += String.fromCharCode(Math.random() *1106).replace(/[^a-zA-Z]|_/g,'');\r\n    return s;\r\n}\r\n\r\n"]}