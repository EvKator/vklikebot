{"version":3,"sources":["../src/nmenu.js"],"names":["nMenu","user","menu","reply_markup","sendMessage","id","then","msg","deleteMenu","menu_id","message_id","text","editMessageText","chat_id","deleteMessage","editMessageReplyMarkup","task","parse_mode","url","taskname","accCount","vk_acc","length","statText","first_name","last_name","balance","dta"],"mappings":"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","file":"nmenu.js","sourcesContent":["import bot from './TeleBot';\r\n\r\nexport default class nMenu {\r\n\r\n    static sendNewMenu(user) {\r\n        const menu = {\r\n            reply_markup: {\r\n                \"inline_keyboard\": [\r\n                    [{\"text\": \"My statistics\", \"callback_data\": \"/stats\"}],\r\n                    [{\"text\": \"My VK profiles\", \"callback_data\": \"/profiles\"}],\r\n                    [{\"text\": \"My tasks\", \"callback_data\": \"/tasks\"}],\r\n                    [{\"text\": \"Earn coins\", \"callback_data\": \"/earn\"}]\r\n                ]\r\n            }\r\n        };\r\n        bot.sendMessage(user.id, \"Choose what do you want to do from list below\", menu).then(function (msg) {\r\n            nMenu.deleteMenu(user);\r\n            user.menu_id = msg.message_id;\r\n        });\r\n    }\r\n\r\n    static sendMenu(user) {\r\n        const reply_markup = {\r\n            \"inline_keyboard\": [\r\n                [{\"text\": \"My statistics\", \"callback_data\": \"/stats\"}],\r\n                [{\"text\": \"My VK profiles\", \"callback_data\": \"/profiles\"}],\r\n                [{\"text\": \"My tasks\", \"callback_data\": \"/tasks\"}],\r\n                [{\"text\": \"Earn coins\", \"callback_data\": \"/earn\"}]\r\n            ]\r\n        };\r\n        let text = \"Choose what do you want to do from list below\";\r\n        bot.editMessageText(text, {chat_id: user.id, message_id: user.menu_id, reply_markup: reply_markup});\r\n    }\r\n\r\n    static async deleteMenu(user){\r\n        await bot.deleteMessage(user.id, user.menu_id);\r\n    }\r\n\r\n    static async sendProfilesEditionMenu(user) {\r\n        const menu = {\r\n            \"inline_keyboard\": [\r\n                [{\"text\": \"Add VK profile\", \"callback_data\": \"/addVkAcc\"}, {\"text\": \"Remove VK profile\", \"callback_data\": \"/removeVkAcc\"}],\r\n                [{\"text\": \"Back\", \"callback_data\": \"/menu\"}]\r\n            ]\r\n        };\r\n        await bot.editMessageReplyMarkup(menu, {chat_id: user.id, message_id: user.menu_id});\r\n    }\r\n\r\n    static async sendTasksMenu(user) {\r\n        const menu = {\r\n            \"inline_keyboard\": [\r\n                [{\"text\": \"Create task\", \"callback_data\": \"/createTask(vk_photo_like)\"},{\"text\": \"Delete task\", \"callback_data\": \"/deleteTask\"}],\r\n                [{\"text\": \"Back\", \"callback_data\": \"/menu\"}]\r\n            ]\r\n        };\r\n        await bot.editMessageReplyMarkup(menu, {chat_id: user.id, message_id: user.menu_id});\r\n    }\r\n\r\n    static async sendCreationTaskMenu(user) {\r\n        const menu = {\r\n            \"inline_keyboard\": [\r\n                [{\"text\": \"Likes on VK photo\", \"callback_data\": \"/vk_photo_like\"}, {\"text\": \"Likes on video\", \"callback_data\": \"/vk_video_like\"}],\r\n                [{\"text\": \"Back\", \"callback_data\": \"/menu\"}]\r\n            ]\r\n        };\r\n        await bot.editMessageReplyMarkup(menu, {chat_id: user.id, message_id: user.menu_id});\r\n    }\r\n\r\n    static async sendEarnMenu(user) {\r\n        const menu = {\r\n            \"inline_keyboard\": [\r\n                [{\"text\": \"Likes on VK photo\", \"callback_data\": \"/earn_vk_photo_like\"}, {\"text\": \"Likes on VK video\", \"callback_data\": \"/earn_vk_video_like\"}],\r\n                [{\"text\": \"Back\", \"callback_data\": \"/menu\"}]\r\n            ]\r\n        };\r\n        await bot.editMessageReplyMarkup(menu, {chat_id: user.id, message_id: user.menu_id});\r\n    }\r\n\r\n    static async sendEarnOperationButton(user, task) {\r\n        const parse_mode = \"Markdown\";\r\n        const reply_markup = {\r\n            \"inline_keyboard\": [\r\n                [{\"text\": \"Go To Photo\", \"url\": task.url, \"callback_data\": \"/goToPhoto(\" + task.taskname + \")\"}],\r\n                [{\"text\": \"Confirm\", \"callback_data\": \"/confirm(\" + task.taskname + \")\"}],\r\n                [{\"text\": \"Confirm\", \"callback_data\": \"/skip(\" + task.taskname + \")\"}],\r\n                [{\"text\": \"Back\", \"callback_data\": \"/menu\"}]\r\n            ]\r\n        };\r\n        //bot.sendMessage(user.id,\"Choose what do you want to do from list below\", urlkey);\r\n        const text = \"Choose what do you want to do from list below\";\r\n        await bot.editMessageText(text, {\r\n            chat_id: user.id,\r\n            message_id: user.menu_id,\r\n            reply_markup: reply_markup,\r\n            parse_mode: parse_mode\r\n        });\r\n    }\r\n\r\n    static async sendStats(user) {\r\n        const reply_markup = {\r\n            \"inline_keyboard\": [\r\n                [{\"text\": \"Back\", \"callback_data\": \"/menu\"}]\r\n            ]\r\n        };\r\n        let accCount = 0;\r\n        if (typeof user.vk_acc !== 'undefined' && typeof user.vk_acc !== null)\r\n            accCount = user.vk_acc.length;\r\n        let statText = \"<b>Stats of \" + user.first_name + \" \" + user.last_name + \" :</b>\\n\" +\r\n            \"Connected VK accounts: \" + accCount + \"\\n\" +\r\n            \"Balance: \" + user.balance + \" coins\";\r\n        let dta = {\r\n            chat_id: user.id,\r\n            message_id: user.menu_id,\r\n            reply_markup: reply_markup,\r\n            parse_mode: \"HTML\"\r\n        };\r\n        await bot.editMessageText(statText, {\r\n            chat_id: user.id,\r\n            message_id: user.menu_id,\r\n            reply_markup: reply_markup,\r\n            parse_mode: \"HTML\"\r\n        });\r\n    }\r\n}"]}